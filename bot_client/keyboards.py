from aiogram.types import InlineKeyboardMarkup, ReplyKeyboardMarkup, InlineKeyboardButton, KeyboardButton
from bot_client import utils
from bot_admin.management.bot_creator import bot


# REGISTRATION PLACE OF CLIENT
from bot_client.json_func import Data

reg_place = ReplyKeyboardMarkup(row_width=3, resize_keyboard=True, one_time_keyboard=True)
tashkent = KeyboardButton("–ì–æ—Ä–æ–¥ –¢–∞—à–∫–µ–Ω—Ç")
andijan = KeyboardButton("–ê–Ω–¥–∏–∂–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
buxara = KeyboardButton("–ë—É—Ö–∞—Ä—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
fergana = KeyboardButton("–§–µ—Ä–≥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
djizak = KeyboardButton("–î–∂–∏–∑–∞–∫—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
khorezm = KeyboardButton("–•–æ—Ä–µ–∑–º—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
namangan = KeyboardButton("–ù–∞–º–∞–Ω–≥–∞–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
navoiy = KeyboardButton("–ù–∞–≤–æ–∏–π—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
kashkadarya = KeyboardButton("–ö–∞—à–∫–∞–¥–∞—Ä—å–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
samarkand = KeyboardButton("–°–∞–º–∞—Ä–∫–∞–Ω–¥—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
sirdarya = KeyboardButton("–°—ã—Ä–¥–∞—Ä—å–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
surxandarya = KeyboardButton("–°—É—Ä—Ö–∞–Ω–¥–∞—Ä—å–∏–Ω—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
tashkent_region = KeyboardButton("–¢–∞—à–∫–µ–Ω—Ç—Å–∫–∞—è—Å–∫–∞—è –æ–±–ª–∞—Å—Ç—å")
karakalpakstan = KeyboardButton("–†–µ—Å–ø—É–±–ª–∏–∫–∞ –ö–∞—Ä–∞–∫–∞–ª–ø–∞–∫—Å—Ç–∞–Ω")
reg_place.row(tashkent)
reg_place.add(andijan, buxara, fergana, djizak, khorezm, namangan, navoiy, kashkadarya, samarkand, sirdarya, surxandarya, tashkent_region)
reg_place.row(karakalpakstan)


# START (MAIN) MENU
async def main_menu(message):
    text = f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <strong>{message.chat.first_name}</strong> üëã.\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–æ—Ç."
    keyboards = InlineKeyboardMarkup(row_width=2)
    catalog = InlineKeyboardButton("–ü—Ä–æ–¥—É–∫—Ü–∏—è  üìîüîé", callback_data="catalog")
    about_us = InlineKeyboardButton("–û –Ω–∞—Å  üë§", callback_data="about_us")
    contacts = InlineKeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç—ã  ‚òéÔ∏èüìç", callback_data="contacts")
    keyboards.row(catalog)
    keyboards.add(about_us, contacts)
    await message.answer(text, reply_markup=keyboards)


# SHOWING CATEGORIES
async def categories(callback):
    chat_id = callback.message.chat.id
    if callback.data != "prev":
        product_path = "catalog/"
        print("Showed catalog")
        data = await Data(user_id=chat_id, path=product_path)
        data.create_path()
    text = "–í—ã–±–µ—Ä–∏—Ç–µ :"
    category_buttons = InlineKeyboardMarkup(row_width=2)
    categories_list = await utils.get_all_categories()
    for category in categories_list:
        button = InlineKeyboardButton(category, callback_data=category)  # /category/
        category_buttons.insert(button)
    prev = InlineKeyboardButton("–ù–∞–∑–∞–¥  ‚Ü©Ô∏è", callback_data="home")
    home = InlineKeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é  üè†", callback_data="home")
    category_buttons.row(prev)
    category_buttons.insert(home)
    await bot.send_message(chat_id=chat_id, text=text, reply_markup=category_buttons)


# # SHOWING SUB-CATEGORIES AND PRODUCTS
# async def category_products(callback, category_name):
#     chat_id = callback.message.chat.id
#     if callback.data != "prev":
#         product_path = f"category={category_name}/"
#         data = await Data(user_id=chat_id, path=product_path)
#         data.create_path()
#     text = "–í—ã–±–µ—Ä–∏—Ç–µ :"
#     product_buttons = InlineKeyboardMarkup(row_width=2)
#     product_list = await utils.get_category_products_names(category_name=category_name)
#     for product in product_list:
#         button = InlineKeyboardButton(product, callback_data=product)
#         product_buttons.insert(button)
#     prev = InlineKeyboardButton("–ù–∞–∑–∞–¥  ‚Ü©Ô∏è", callback_data=f"prev")
#     home = InlineKeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é  üè†", callback_data="home")
#     product_buttons.row(prev)
#     product_buttons.insert(home)
#     await bot.send_message(chat_id=chat_id, text=text, reply_markup=product_buttons)


# SHOWING SUB-CATEGORIES AND PRODUCTS
async def subcategories_or_category_products(callback, category_name):
    chat_id = callback.message.chat.id
    if callback.data != "prev":
        # product_path = "subcategories/"
        product_path = f"categories={category_name}/"
        print("Showed catalog")
        data = await Data(user_id=chat_id, path=product_path)
        data.create_path()
    text = "–í—ã–±–µ—Ä–∏—Ç–µ :"
    subcategory_and_product_buttons = InlineKeyboardMarkup(row_width=3)
    subcategories_list = await utils.get_need_subcategories(callback=category_name)
    product_list = await utils.get_category_products(callback=category_name)
    for subcategory in subcategories_list:
        button = InlineKeyboardButton(subcategory, callback_data=subcategory)
        subcategory_and_product_buttons.insert(button)
    for product in product_list:
        button = InlineKeyboardButton(product, callback_data=product)
        subcategory_and_product_buttons.insert(button)
    prev = InlineKeyboardButton("–ù–∞–∑–∞–¥  ‚Ü©Ô∏è", callback_data=f"prev")
    home = InlineKeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é  üè†", callback_data="home")
    subcategory_and_product_buttons.row(prev)
    subcategory_and_product_buttons.insert(home)
    await bot.send_message(chat_id=chat_id, text=text, reply_markup=subcategory_and_product_buttons)


async def subcategory_products(callback, subcategory_name):
    chat_id = callback.message.chat.id
    if callback.data != "prev":
        product_path = f"subcategories={subcategory_name}/"
        data = await Data(user_id=chat_id, path=product_path)
        data.create_path()
    text = "–í—ã–±–µ—Ä–∏—Ç–µ :"
    product_buttons = InlineKeyboardMarkup(row_width=3)
    product_list = await utils.get_subcategory_products(callback=subcategory_name)
    for product in product_list:
        button = InlineKeyboardButton(product, callback_data=product)
        product_buttons.insert(button)
    prev = InlineKeyboardButton("–ù–∞–∑–∞–¥  ‚Ü©Ô∏è", callback_data=f"prev")
    home = InlineKeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é  üè†", callback_data="home")
    product_buttons.row(prev)
    product_buttons.insert(home)
    await bot.send_message(chat_id=chat_id, text=text, reply_markup=product_buttons)
